/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "MAIN";
// -----------------------------------------------------------------------------------------
// |    |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |    |
// |    |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;: |    |
// |    |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /\ |    |
//                    | CTRL | SHIFT | LWR |   | RSE | ALT | GUI |
                        bindings = <
   &trans	&mt ESC Q	&kp W	&kp E	&kp R	&kp T		&kp Y	&kp U	&kp I		&kp O	&kp P		&trans
   &trans	&kp A		&kp S	&kp D	&kp F	&kp G		&kp H	&kp J	&kp K		&kp L	&mt SEMI COLON	&trans
   &trans	&kp Z		&kp X	&kp C	&kp V	&kp B		&kp N	&kp M	&kp COMMA	&kp DOT	&mt FSLH BSLH	&trans
                &mt LCTRL TAB	&mt LSHFT SPACE	&lt LWR RET		&lt RSE ESC	&mt RALT BSPC	&mt RGUI DEL
                        >;
                };
                lower_layer {
                        label = "SYM";
// -----------------------------------------------------------------------------------------
// |    |  F2 |  F3 |  F4 |  F5 |  F6 |   |  F7 |  F8 |  F9 | F10 | F11 |     |    |
// |    |  F1 |  +  |  -_ |  _  |  =  |   |  ^  |  *  |  (  |  )  | F12 |     |
// |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  [{ |  ]} |  |  |     |
//              | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans	&kp F2		&kp F3	&kp F4	&kp F5	&kp F6		&kp F7	&kp F8	&kp F9	&kpF10	&kp F11	&trans
   &trans	&kp F1		&kp AT	&kp HASH &kp DLLR &kp PRCNT	&kp CARET &kp AMPS &kp STAR &kp LPAR &kp F12 &trans
   &trans	&kp EXCL	&kp AT &kp N3   &kp N4   &kp N5           &kp N6    &kp N7   &kp N8   &kp N9   &kp pipe   &trans
                                       &lt ADJ TAB &trans &trans   &trans &trans &lt ADJ DEL
                        >;
                };

                raise_layer {
                        label = "NUM";
// -----------------------------------------------------------------------------------------
// |     |  /  |  7  |  8  |  9  |  -  |   |     |      | PRSC|     | SCLK|     |
// |     |  *  |  4  |  5  |  6  |  +  |   |     |      |  UP |     | INS |     |
// |     |  0  |  1  |  2  |  3  |  .  |   |     | LEFT | DOWN| RGHT| PAUS|     |
//                          |     |     | ADJ |   | ADJ |     |     |
                        bindings = <
   &trans &kp KP_SLASH    &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_MINUS        &none	&none		&kp PSCRN 	&none	&kp SLCK	&none
   &trans &kp KP_MULTIPLY &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp KP_PLUS         &none	&none		&kp UP		&none	&kp INS  &none
   &trans &kp KP_N0       &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_DOT          &none	&kp LEFT	&kp DOWN  	&kp RGHT &kp PAUSE_BREAK &trans
                                        &trans &trans &lt ADJ RET		&lt ADJ ESC &trans &trans
                        >;
                };
                adjust_layer {
                        label = "ADJ";
// -----------------------------------------------------------------------------------------
// |     |BTCLR| BLDR| RST |     |     |   | MUT | VOLD| VOLU|     |      |
// |     | BT0 | BT1 | BT2 | BT3 | BT4 |   |     | HOME| END |     |      |    |
// |     |     |     |     |     |     |   |     | PGDN| PGUP|     |      |    |
//                   |     |     |     |   |     |     |     |
                        bindings = <
   &none	&bt BT_CLR  &bootloader	&reset	&none        &none			&kp C_MUTE	&kp C_VOL_DN	&kp C_VOL_UP	&none	&none	&none
   &none	&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4	&none		&kp HOME	&kp END		&none	&none	&none
   &none	&none        &none        &none        &none        &none		&none		&kp PG_DN	&kp PG_UP	&none	&none	&none
                                                           &trans &none &trans       &trans &none &trans
                        >;
                };
        };
}
